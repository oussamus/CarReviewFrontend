[{"C:\\Users\\oussa\\OneDrive\\Desktop\\Oussama\\FALL 2020\\COEN 424\\Frontend\\addReviewProject-main\\src\\index.js":"1","C:\\Users\\oussa\\OneDrive\\Desktop\\Oussama\\FALL 2020\\COEN 424\\Frontend\\addReviewProject-main\\src\\components\\Navbar.jsx":"2","C:\\Users\\oussa\\OneDrive\\Desktop\\Oussama\\FALL 2020\\COEN 424\\Frontend\\addReviewProject-main\\src\\pages\\Home.jsx":"3","C:\\Users\\oussa\\OneDrive\\Desktop\\Oussama\\FALL 2020\\COEN 424\\Frontend\\addReviewProject-main\\src\\components\\search.jsx":"4"},{"size":622,"mtime":1607030680236,"results":"5","hashOfConfig":"6"},{"size":2277,"mtime":1607030680392,"results":"7","hashOfConfig":"6"},{"size":4014,"mtime":1607030680596,"results":"8","hashOfConfig":"6"},{"size":16737,"mtime":1607046000093,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pumfgw",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\oussa\\OneDrive\\Desktop\\Oussama\\FALL 2020\\COEN 424\\Frontend\\addReviewProject-main\\src\\index.js",[],"C:\\Users\\oussa\\OneDrive\\Desktop\\Oussama\\FALL 2020\\COEN 424\\Frontend\\addReviewProject-main\\src\\components\\Navbar.jsx",[],"C:\\Users\\oussa\\OneDrive\\Desktop\\Oussama\\FALL 2020\\COEN 424\\Frontend\\addReviewProject-main\\src\\pages\\Home.jsx",["19","20","21"],"C:\\Users\\oussa\\OneDrive\\Desktop\\Oussama\\FALL 2020\\COEN 424\\Frontend\\addReviewProject-main\\src\\components\\search.jsx",["22"],"import React, { Component } from 'react';\nimport { Field, Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Alert, Button, Col, FormFeedback, FormGroup, Input, Label, Row} from 'reactstrap';\nimport * as Yup from 'yup';\nimport { apiBestVehicle } from '../api/cars';\n\nclass search extends Component {\n\n   // eslint-disable-next-line no-useless-constructor\n   constructor(props){\n       super(props);\n       this._handleFormSubmit = this._handleFormSubmit.bind(this);\n       this.state = {\n           bestVehicle : [],\n           message: '',\n           isVide: true\n       }\n   }\n\n   _handleFormSubmit(values) {\n        apiBestVehicle(values)\n        .then(res => {\n            if(res.data.id !== null)\n            {\n                // console.log(res.data.id)\n                this.setState({\n                    bestVehicle: res.data,\n                    message: 'Your search was successful',\n                    isVide : false\n                })\n            } \n        })\n        .catch(err => {\n            console.log(err)\n        });\n   }\n    _renderErrorIfAny(){\n        if (!this.state.isVide || this.bestVehicle) {\n            return (\n                <Alert color=\"success\" style={{ textAlign: 'center' }}>\n                    {this.state.message}\n                </Alert>\n            );\n        }\n        return (\n            <Alert color=\"warning\" style={{ textAlign: 'center' }}>\n              Start Your Search\n            </Alert>\n        );\n    }\n\n   render() {\n       const DataBestVehicle = this.state.bestVehicle\n    //    console.log(DataBestVehicle)\n        return (\n        <div style={{ padding: 20 }}>\n            <h3 style={{ textAlign: 'center' }}>Finding The Best Vehicle</h3>\n            <hr />\n            { this._renderErrorIfAny() }\n            <div xs=\"2\" className=\"mt-4\">\n                <Formik\n                  initialValues={{  year: 0, luxuryLevel: 0, size: 0, priceRange: 0, type: 0, fuelEfficiency: 0,  power: 0 , handling: 0, safety: 0, reliability: 0, steeringFeelAndResponse: 0, comfortLevel: 0,\n                                   rideQuality: 0, buildQuality: 0, technology: 0, styling: 0, resaleValue: 0\n                                     }}\n                    onSubmit={this._handleFormSubmit}\n                    validationSchema={Yup.object().shape({\n                        year: Yup.number(),\n                        luxuryLevel: Yup.number(),\n                        size: Yup.number(),\n                        priceRange: Yup.number(),\n                        type: Yup.number(),\n                        fuelEfficiency: Yup.number(),\n                        power: Yup.number(),\n                        handling: Yup.number(),\n                        safety: Yup.number(),\n                        reliability: Yup.number(),\n                        steeringFeelAndResponse: Yup.number(),\n                        comfortLevel: Yup.number(),\n                        rideQuality: Yup.number(),\n                        buildQuality: Yup.number(),\n                        technology: Yup.number(),\n                        styling: Yup.number(),\n                        resaleValue: Yup.number()\n                    })}\n                >\n                { \n                    ({handleChange,handleSubmit, isValid, isSubmitting, errors, touched}) => \n                    (\n                        <div>\n                        <Row xs=\"3\" className=\"mt-5\">\n                            <Col>\n                             <FormGroup>\n                                <Label>Year</Label>\n                                <Input\n                                invalid={errors.year && touched.year}\n                                name=\"year\"\n                                type=\"number\"\n                                placeholder=\"Year\"\n                                onChange={handleChange}\n                                />\n                                {errors.year && touched.year && (\n                                <FormFeedback>{errors.year}</FormFeedback>\n                                )}\n                            </FormGroup>\n                             <FormGroup>\n                                <Label>Luxury Level</Label>\n                                <Input\n                                invalid={errors.luxuryLevel && touched.luxuryLevel}\n                                name=\"luxuryLevel\"\n                                type=\"select\"\n                                placeholder=\"Luxury Level\"\n                                onChange={handleChange}\n                                >\n                                    <option>Normal</option>\n                                    <option >Luxury</option>\n                                    <option>Sport</option>\n                                </Input>\n                                {errors.luxuryLevel && touched.luxuryLevel && (\n                                <FormFeedback>{errors.luxuryLevel}</FormFeedback>\n                                )}\n                            </FormGroup>\n                             <FormGroup>\n                                <Label>Size</Label>\n                                <Input\n                                invalid={errors.size && touched.size}\n                                name=\"size\"\n                                type=\"number\"\n                                placeholder=\"Size\"\n                                onChange={handleChange}\n                                />\n                                {errors.size && touched.size && (\n                                <FormFeedback>{errors.size}</FormFeedback>\n                                )}\n                            </FormGroup>\n                              <FormGroup>\n                                <Label>Price Range</Label>\n                                <Input\n                                invalid={errors.priceRange && touched.priceRange}\n                                name=\"priceRange\"\n                                type=\"string\"\n                                placeholder=\"Price Range\"\n                                onChange={handleChange}\n                                />\n                                {errors.priceRange && touched.priceRange && (\n                                <FormFeedback>{errors.priceRange}</FormFeedback>\n                                )}\n                            </FormGroup>\n                             <FormGroup>\n                                <Label>Power</Label>\n                                <Input\n                                invalid={errors.power && touched.power}\n                                name=\"power\"\n                                type=\"number\"\n                                placeholder=\"Power\"\n                                onChange={handleChange}\n                                />\n                                {errors.power && touched.power && (\n                                <FormFeedback>{errors.power}</FormFeedback>\n                                )}\n                            </FormGroup>\n                             <FormGroup>\n                                <Label>Type</Label>\n                                <Input\n                                invalid={errors.type && touched.type}\n                                name=\"type\"\n                                type=\"number\"\n                                placeholder=\"Type\"\n                                onChange={handleChange}\n                                />\n                                {errors.type && touched.type && (\n                                <FormFeedback>{errors.type}</FormFeedback>\n                                )}\n                            </FormGroup>\n                             <FormGroup>\n                                <Label>Fuel Efficiency</Label>\n                                <Input\n                                invalid={errors.fuelEfficiency && touched.fuelEfficiency}\n                                name=\"fuelEfficiency\"\n                                type=\"number\"\n                                placeholder=\"Fuel Efficiency\"\n                                onChange={handleChange}\n                                />\n                                {errors.fuelEfficiency && touched.fuelEfficiency && (\n                                <FormFeedback>{errors.fuelEfficiency}</FormFeedback>\n                                )}\n                            </FormGroup>\n                             <FormGroup>\n                                <Label>Handling</Label>\n                                <Input\n                                invalid={errors.handling && touched.handling}\n                                name=\"handling\"\n                                type=\"number\"\n                                placeholder=\"Handlingy\"\n                                onChange={handleChange}\n                                />\n                                {errors.handling && touched.handling && (\n                                <FormFeedback>{errors.handling}</FormFeedback>\n                                )}\n                            </FormGroup>\n                             <FormGroup>\n                                <Label>Safety</Label>\n                                <Input\n                                invalid={errors.safety && touched.safety}\n                                name=\"safety\"\n                                type=\"number\"\n                                placeholder=\"Safety\"\n                                onChange={handleChange}\n                                />\n                                {errors.safety && touched.safety && (\n                                <FormFeedback>{errors.safety}</FormFeedback>\n                                )}\n                            </FormGroup>\n                           </Col>\n                           <Col>\n                            <FormGroup>\n                                <Label>Reliability</Label>\n                                <Input\n                                invalid={errors.reliability && touched.reliability}\n                                name=\"reliability\"\n                                type=\"number\"\n                                placeholder=\"Reliability\"\n                                onChange={handleChange}\n                                />\n                                {errors.reliability && touched.reliability && (\n                                <FormFeedback>{errors.reliability}</FormFeedback>\n                                )}\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Steering Feel And Response</Label>\n                                <Input\n                                invalid={errors.steeringFeelAndResponse && touched.steeringFeelAndResponse}\n                                name=\"steeringFeelAndResponse\"\n                                type=\"number\"\n                                placeholder=\"Steering Feel And Response\"\n                                onChange={handleChange}\n                                />\n                                {errors.steeringFeelAndResponse && touched.steeringFeelAndResponse && (\n                                <FormFeedback>{errors.steeringFeelAndResponse}</FormFeedback>\n                                )}\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Comfort Level</Label>\n                                <Input\n                                invalid={errors.comfortLevel && touched.comfortLevel}\n                                name=\"comfortLevel\"\n                                type=\"number\"\n                                placeholder=\"Comfort Level\"\n                                onChange={handleChange}\n                                />\n                                {errors.comfortLevel && touched.comfortLevel && (\n                                <FormFeedback>{errors.comfortLevel}</FormFeedback>\n                                )}\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Ride Quality</Label>\n                                <Input\n                                invalid={errors.rideQuality && touched.rideQuality}\n                                name=\"rideQuality\"\n                                type=\"number\"\n                                placeholder=\"Ride Quality\"\n                                onChange={handleChange}\n                                />\n                                {errors.rideQuality && touched.rideQuality && (\n                                <FormFeedback>{errors.rideQuality}</FormFeedback>\n                                )}\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Build Quality</Label>\n                                <Input\n                                invalid={errors.buildQuality && touched.buildQuality}\n                                name=\"buildQuality\"\n                                type=\"number\"\n                                placeholder=\"Build Quality\"\n                                onChange={handleChange}\n                                />\n                                {errors.buildQuality && touched.buildQuality && (\n                                <FormFeedback>{errors.buildQuality}</FormFeedback>\n                                )}\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Technology</Label>\n                                <Input\n                                invalid={errors.technology && touched.technology}\n                                name=\"technology\"\n                                type=\"number\"\n                                placeholder=\"Technology\"\n                                onChange={handleChange}\n                                />\n                                {errors.technology && touched.technology && (\n                                <FormFeedback>{errors.technology}</FormFeedback>\n                                )}\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Styling</Label>\n                                <Input\n                                invalid={errors.styling && touched.styling}\n                                name=\"styling\"\n                                type=\"number\"\n                                placeholder=\"Styling\"\n                                onChange={handleChange}\n                                />\n                                {errors.styling && touched.styling && (\n                                <FormFeedback>{errors.styling}</FormFeedback>\n                                )}\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Resale Value</Label>\n                                <Input\n                                invalid={errors.resaleValue && touched.resaleValue}\n                                name=\"resaleValue\"\n                                type=\"number\"\n                                placeholder=\"Resale Value\"\n                                onChange={handleChange}\n                                />\n                                {errors.resaleValue && touched.resaleValue && (\n                                <FormFeedback>{errors.resaleValue}</FormFeedback>\n                                )}\n                            </FormGroup> \n                           </Col>\n                           <Col>\n                                <Button\n                                className=\"mt-5\"\n                                onClick={handleSubmit}\n                                style={{ marginTop: 20 }}\n                                color=\"primary\"\n                                size=\"lg\"\n                                block\n                                >\n                                    Search Your Best Vehicle\n                                </Button>\n                                <Link to=\"/home\"><Button color=\"info\" size=\"lg\" style={{ marginTop: 10 }} block>Return to Home</Button></Link>\n                                <Link to={ !this.state.isVide ? { pathname: \"/SeeYourBestVehicle\", state: {DataBestVehicle} } : '/home' }><Button size=\"lg\" style={{ marginTop: 10 }} block>See Your Best Vehicle</Button></Link>\n                           </Col>\n                        </Row>\n                        </div>\n                    )\n                }\n                </Formik>\n            </div>\n        </div>\n        );\n    }\n}\n \nexport default search;\n\n\n\n",{"ruleId":"23","severity":1,"message":"24","line":6,"column":8,"nodeType":"25","messageId":"26","endLine":6,"endColumn":17},{"ruleId":"23","severity":1,"message":"27","line":33,"column":16,"nodeType":"25","messageId":"26","endLine":33,"endColumn":23},{"ruleId":"23","severity":1,"message":"28","line":33,"column":25,"nodeType":"25","messageId":"26","endLine":33,"endColumn":31},{"ruleId":"23","severity":1,"message":"29","line":2,"column":10,"nodeType":"25","messageId":"26","endLine":2,"endColumn":15},"no-unused-vars","'updateCar' is defined but never used.","Identifier","unusedVar","'profile' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'Field' is defined but never used."]